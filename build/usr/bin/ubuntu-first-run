#!/bin/bash
# ubuntu-first-run.sh
# Version: loaded dynamically
# Author: Jesse Hawkins
# License: GPLv3
#
# Purpose:
#   Interactive post-install setup assistant for Ubuntu Server 24.04+.
#   Supports rollback tracking, visual checklist selection, and modular features.
#
# Usage:
#   sudo ubuntu-first-run

set -e

# Load version
VERSION=$(cat "$(dirname "$0")/../VERSION")

# Where rollback files are stored
ROLLBACK_DIR="/usr/share/ubuntu-first-run/rollback"
ROLLBACK_BASE="ubuntu-first-run_rollback_$(date +%F_%H-%M-%S)"
ROLLBACK_FILE="$ROLLBACK_DIR/$ROLLBACK_BASE.ufr"
ROLLBACK_TAR="$ROLLBACK_DIR/$ROLLBACK_BASE.tar.gz"

mkdir -p "$ROLLBACK_DIR"
touch "$ROLLBACK_FILE"
chmod 600 "$ROLLBACK_FILE"

echo "üîí Rollback log: $ROLLBACK_FILE"
echo "üì¶ Rollback archive: $ROLLBACK_TAR"

#---------------------------------------------
# FUNCTION: Prompt customization
#---------------------------------------------
update_shell_prompt() {
  local bashrc="/home/$SUDO_USER/.bashrc"
  local relpath="home/$SUDO_USER/.bashrc"

  echo "üîÅ Backing up $bashrc into rollback tarball..."

  local tmpdir
  tmpdir=$(mktemp -d)
  mkdir -p "$tmpdir/home/$SUDO_USER"
  cp "$bashrc" "$tmpdir/$relpath"
  tar -czf "$ROLLBACK_TAR" -C "$tmpdir" "$relpath"
  rm -rf "$tmpdir"

  echo "tar -xzf \"$ROLLBACK_TAR\" -C /" >> "$ROLLBACK_FILE"
  echo "echo '‚úÖ Restored .bashrc from rollback archive'" >> "$ROLLBACK_FILE"

  cat << 'EOF' >> "$bashrc"

# --- Custom vertical shell prompt added by ubuntu-first-run ---
PS1='\u@\h\n\w\n\$ '
EOF

  echo "‚úÖ Shell prompt updated and rollback saved."
}

#---------------------------------------------
# FUNCTION: List rollback points and restore
#---------------------------------------------
check_for_rollbacks() {
  echo "üîç Checking for rollback points in $ROLLBACK_DIR..."
  local files=("$ROLLBACK_DIR"/*.ufr)
  if [[ ! -e "${files[0]}" ]]; then
    echo "üü¢ No rollback files found."
    return
  fi

  echo "‚ö†Ô∏è Rollback files found:"
  local i=1
  for file in "${files[@]}"; do
    echo " [$i] $(basename "$file")"
    ((i++))
  done

  read -p "Restore system to a previous state? [y/N]: " restore
  if [[ "$restore" =~ ^[Yy]$ ]]; then
    read -p "Enter rollback number to restore to (1-${#files[@]}): " choice
    if [[ "$choice" =~ ^[0-9]+$ && "$choice" -ge 1 && "$choice" -le ${#files[@]} ]]; then
      echo "üö® Restoring to ${files[$((choice-1))]}..."
      for ((j=${#files[@]}-1; j>=$((choice-1)); j--)); do
        echo "‚Ü©Ô∏è Running rollback: ${files[$j]}"
        bash "${files[$j]}"
      done
      echo "‚úÖ System rolled back."
      exit 0
    else
      echo "‚ùå Invalid selection. Aborting."
      exit 1
    fi
  fi
}

#---------------------------------------------
# FUNCTION: Show checklist UI
#---------------------------------------------
show_checklist() {
  echo ""
  echo "ubuntu-first-run v$VERSION"
  echo "-----------------------------------------"
  echo "Select the actions to perform:"
  echo "[Y] 01. Update shell prompt"
  echo ""

  read -p "Run 01 (update shell prompt)? [Y/n]: " update_prompt
  update_prompt=${update_prompt:-Y}
}

#---------------------------------------------
# FUNCTION: Execute selected steps
#---------------------------------------------
run_selected_actions() {
  echo ""
  echo "Summary of actions to perform:"
  if [[ "$update_prompt" =~ ^[Yy]$ ]]; then
    echo "‚úî Update shell prompt"
  else
    echo "‚úò Skip shell prompt update"
  fi

  echo ""
  read -p "Continue with these changes? [Y/n]: " confirm
  confirm=${confirm:-Y}

  if [[ "$confirm" =~ ^[Yy]$ ]]; then
    [[ "$update_prompt" =~ ^[Yy]$ ]] && update_shell_prompt
    echo ""
    echo "‚úÖ All selected tasks completed."
    echo "üìÅ Rollback script: $ROLLBACK_FILE"
    echo "üì¶ Rollback archive: $ROLLBACK_TAR"
  else
    echo "‚ùå Aborted by user."
    exit 0
  fi
}

#---------------------------------------------
# ENTRY POINT
#---------------------------------------------
if [[ "$EUID" -ne 0 ]]; then
  echo "‚ö†Ô∏è  Please run this script with sudo."
  exit 1
fi

check_for_rollbacks
show_checklist
run_selected_actions
